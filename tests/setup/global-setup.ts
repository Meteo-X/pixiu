/**
 * JestÂÖ®Â±ÄËÆæÁΩÆ
 * Âú®ÊâÄÊúâÊµãËØïÂºÄÂßãÂâçËøêË°å
 */

import { execSync } from 'child_process';

export default async function globalSetup() {
  console.log('üöÄ Setting up global test environment...');
  
  try {
    // ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
    process.env.NODE_ENV = 'test';
    process.env.LOG_LEVEL = 'error'; // ÊµãËØïÊó∂ÂáèÂ∞ëÊó•ÂøóËæìÂá∫
    
    // ÂêØÂä®ÊµãËØïÁî®ÁöÑPub/SubÊ®°ÊãüÂô®
    console.log('üì° Starting Pub/Sub emulator...');
    process.env.PUBSUB_EMULATOR_HOST = 'localhost:8085';
    
    // Ê£ÄÊü•DockerÊòØÂê¶ÂèØÁî®ÔºåÂ¶ÇÊûúÂèØÁî®ÂàôÂêØÂä®ÊµãËØïÊúçÂä°
    try {
      execSync('docker --version', { stdio: 'ignore' });
      console.log('üê≥ Docker is available, starting test services...');
      
      // ÂêØÂä®ÊµãËØïÊï∞ÊçÆÂ∫ìÂíåRedis
      execSync('docker-compose -f ../deployment/docker-compose/docker-compose.test.yml up -d', {
        stdio: 'inherit',
        cwd: __dirname
      });
      
      // Á≠âÂæÖÊúçÂä°ÂêØÂä®
      await new Promise(resolve => setTimeout(resolve, 5000));
      
    } catch (error) {
      console.log('‚ö†Ô∏è  Docker not available, using mock services for tests');
    }
    
    console.log('‚úÖ Global setup completed');
    
  } catch (error) {
    console.error('‚ùå Global setup failed:', error);
    throw error;
  }
}